{"title":"Pivoting: data in wide and long format","markdown":{"yaml":{"layout":"page","title":"Pivoting: data in wide and long format","date":"Last updated: `r Sys.Date()`"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE)\n```\n\n\nTabular data can be stored in different formats. In tidy data, every row is an observation and every column is a variable. But depending on what you define as your observations and variables, you might need to pivot your data from wide to long format or vice versa.\n\nThis tutorial introduces the concepts of long and wide format, and shows you how to use the `pivot_longer()` and `pivot_wider()` functions from `tidyverse` on the `population` dataset (which comes pre-loaded with `tidyverse` so you don't need to import it).\n\nLet's load the `tidyverse` package and have a look at the `population` dataset:\n\n```{r}\n# load tidyverse\nlibrary(tidyverse)\n\n# add diamonds to the environment\ndata(population)\n```\n\n## Long and wide format\n\nCompare the following two simple datasets:\n\nData A:\n\n```{r, eval = TRUE, echo = FALSE, message = FALSE}\nlibrary(tidyverse)\ntest <- tibble(\n  year = rep(c(2022, 2023), each = 2),\n  country = rep(c(\"countryA\", \"countryB\"), times = 2),\n  value = c(10, 12, 14, 15)\n)\nknitr::kable(test)\n```\n\nData B:\n\n```{r, eval = TRUE, echo = FALSE, message = FALSE}\ntest %>% \n  pivot_wider(names_from = country, values_from = value) %>% \n  knitr::kable()\n```\n\nData A is in long format, and Data B is in wide format. The tables contain the same information, but sometimes one format is more convenient than the other.\n\nYou can convert between these two forms using the `pivot_longer()` (wide to long) and `pivot_wider()` (long to wide) functions. To use `pivot_longer()` you need to specify which columns you'd like to turn into a single column: e.g. to go from Data B to Data A, you'd use the argument `cols = c(countryA, countryB)` (or equivalently, `cols = -year`). To use `pivot_wider()`, you need to specify which column to use for variable names, and which column for variable values: going from Data A to Data B would use the arguments `names_from = country, values_from = value`.\n\n## Pivoting on the `population` data\n\nThe `population` dataset contains the population of different countries over time. Currently it is in long format: the identifying variables are `country` and `year`, and the variable of interest is `population`.\n\nWe can convert it to wide format where the unit of observation is the country, and we have different variables for the population in every year.\n\n```{r}\n# convert the data to wide format with country as the unit of observation\npivot_wider(population, names_from = year, values_from = population)\n```\n\nAlternatively, we can say that the unit of observation is the year, and we have different variables for the population in every country in that year.\n\n```{r}\n# convert the data to wide format with year as the unit of observation\npivot_wider(population, names_from = country, values_from = population)\n```\n\nThese different formats can be useful for different types of analysis.\n\nTo be able to work with this new dataset, you need to save it to a new object. Let's assign the result of the `pivot_wider()` function (with countries as the unit) to a new object called `population_wide`:\n\n```{r}\n# save the result to a new object\npopulation_wide <- pivot_wider(population, names_from = year, values_from = population)\n```\n\nPivoting is reversible, so we can convert `population_wide` back to long format with the `pivot_longer()` function. We want to take the years as the variable names, and the population as the values -- instead of listing all years as the columns we want to convert, we can say that we want to pivot all columns except `country`.\n\n```{r}\n# convert the data back to long format\npivot_longer(population_wide, cols = -country, names_to = \"year\", values_to = \"population\")\n```\n\nThe `names_to` and `values_to` arguments are used to specify the names of the new columns that will be created; they are optional, but can be useful for clarity.\n\n## Video tutorial TBA\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE)\n```\n\n## Introduction\n\nTabular data can be stored in different formats. In tidy data, every row is an observation and every column is a variable. But depending on what you define as your observations and variables, you might need to pivot your data from wide to long format or vice versa.\n\nThis tutorial introduces the concepts of long and wide format, and shows you how to use the `pivot_longer()` and `pivot_wider()` functions from `tidyverse` on the `population` dataset (which comes pre-loaded with `tidyverse` so you don't need to import it).\n\nLet's load the `tidyverse` package and have a look at the `population` dataset:\n\n```{r}\n# load tidyverse\nlibrary(tidyverse)\n\n# add diamonds to the environment\ndata(population)\n```\n\n## Long and wide format\n\nCompare the following two simple datasets:\n\nData A:\n\n```{r, eval = TRUE, echo = FALSE, message = FALSE}\nlibrary(tidyverse)\ntest <- tibble(\n  year = rep(c(2022, 2023), each = 2),\n  country = rep(c(\"countryA\", \"countryB\"), times = 2),\n  value = c(10, 12, 14, 15)\n)\nknitr::kable(test)\n```\n\nData B:\n\n```{r, eval = TRUE, echo = FALSE, message = FALSE}\ntest %>% \n  pivot_wider(names_from = country, values_from = value) %>% \n  knitr::kable()\n```\n\nData A is in long format, and Data B is in wide format. The tables contain the same information, but sometimes one format is more convenient than the other.\n\nYou can convert between these two forms using the `pivot_longer()` (wide to long) and `pivot_wider()` (long to wide) functions. To use `pivot_longer()` you need to specify which columns you'd like to turn into a single column: e.g. to go from Data B to Data A, you'd use the argument `cols = c(countryA, countryB)` (or equivalently, `cols = -year`). To use `pivot_wider()`, you need to specify which column to use for variable names, and which column for variable values: going from Data A to Data B would use the arguments `names_from = country, values_from = value`.\n\n## Pivoting on the `population` data\n\nThe `population` dataset contains the population of different countries over time. Currently it is in long format: the identifying variables are `country` and `year`, and the variable of interest is `population`.\n\nWe can convert it to wide format where the unit of observation is the country, and we have different variables for the population in every year.\n\n```{r}\n# convert the data to wide format with country as the unit of observation\npivot_wider(population, names_from = year, values_from = population)\n```\n\nAlternatively, we can say that the unit of observation is the year, and we have different variables for the population in every country in that year.\n\n```{r}\n# convert the data to wide format with year as the unit of observation\npivot_wider(population, names_from = country, values_from = population)\n```\n\nThese different formats can be useful for different types of analysis.\n\nTo be able to work with this new dataset, you need to save it to a new object. Let's assign the result of the `pivot_wider()` function (with countries as the unit) to a new object called `population_wide`:\n\n```{r}\n# save the result to a new object\npopulation_wide <- pivot_wider(population, names_from = year, values_from = population)\n```\n\nPivoting is reversible, so we can convert `population_wide` back to long format with the `pivot_longer()` function. We want to take the years as the variable names, and the population as the values -- instead of listing all years as the columns we want to convert, we can say that we want to pivot all columns except `country`.\n\n```{r}\n# convert the data back to long format\npivot_longer(population_wide, cols = -country, names_to = \"year\", values_to = \"population\")\n```\n\nThe `names_to` and `values_to` arguments are used to specify the names of the new columns that will be created; they are optional, but can be useful for clarity.\n\n## Video tutorial TBA\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"r_intro_pivot.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","theme":"simplex","mainfont":"Cormorant SC","fontsize":"20px","layout":"page","title":"Pivoting: data in wide and long format","date":"Last updated: `r Sys.Date()`"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}