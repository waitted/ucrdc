{
  "hash": "af78d980f0c55b14a5ba457e46fe5dc9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The Correlation between the Procellariidae Family and the Strength of the Wind in Canterbury, New Zealand SCIENVI\"\ndate: \"Spring 2023<br>Last updated: 2025-08-17\"\noutput: \n  html_document:\n    theme: cosmo\n    toc: true\n    toc_float:\n      collapsed: false\n      smooth_scroll: true\n---\n\n\n## Instructions\n\nThese instructions are to be used as a guide for you to complete your own original assignment. Follow the steps of this example assignment to gain a better understanding of the functions needed to complete your own variation. You can be as creative as you want. In your variation choose:\n\n-   One of the 17 regions of New Zealand\n\n-   One of five weather variables (some weather variables may be unavailable in certain regions of New Zealand)\n\n-   One of the following three options to find a correlation between the previously chosen variables:\n\n    -   A specific bird family\n\n    -   Bird weight\n\n    -   Bird size\n\n## Libraries and Packages\n\nIn this assignment we will be using functions that belong to certain libraries. Before we can load the libraries we must first use the function *install.packages(\"...\")* to install the libraries. After that we can load in the libraries with the code *library(...)*. Libraries need to be loaded at the start of every session but only need to be installed once.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"tidyverse\")\n#install.packages(\"mapproj\")\n#install.packages(\"tidymodels\")\n```\n:::\n\n\nNow we load the libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(mapproj)\nlibrary(tidymodels)\n```\n:::\n\n\n## Data Import\n\n### Bird data\n\nNow we will import the data needed to do the assignment: the weather data, the bird occurrence data, and the bird information data. We will use the *read_delim(..)* function to access the data. To access the bird occurrence data, read in the comma-separated-value file titled Region_Birds.csv with Region being your selected region; Canterbury in this case. To access the bird information data, read in the text file titled Bird_details_nz.txt, this file is tab-separated so be sure to use the right delimiter when you read in the file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#library used: tidyverse\n\nregion_birds <- read_delim(\"https://raw.githubusercontent.com/ucrdatacenter/projects/main/SCIENVI303/2023h1/ass2/Birds/Canterbury/Canterbury_Birds.csv\", delim=\",\")\n\nbird_info <- read_delim(\"https://raw.githubusercontent.com/ucrdatacenter/projects/main/SCIENVI303/2023h1/ass2/Bird_details_NZ.txt\", delim=\"\\t\")\n```\n:::\n\n\nYou can view the two datasets by using the *view(..)* function. We see that the bird_info dataframe contains information about the family the bird species belong to, their average weight, and their average size. We see that the region_birds dataframe contains occurrence data: when, where, which, and how many birds were observed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#library used: tidyverse\nview(region_birds)\nview(bird_info)\n```\n:::\n\n\nIt would be best for us to combine these two datasets into one dataframe. You can do this by using the *left_join(.., by=\"..\")* function which joins two dataframes together by a key, in this case common_name Both datasets have common_name as a variable so it makes sense that the information assigned to common_name in the information dataset will also apply to the bird of the same common_name in the occurrence dataset.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n#library used: tidyverse\ncanterbury_birds <- region_birds %>%\n  left_join(bird_info, by=\"common_name\")\n```\n:::\n\n\nNow we can use this new dataframe to find how out many occurrences there are of your chosen bird variable. In this case we will use the *summarise(...)* function to retrieve information regarding bird family occurrences. Now we can see how often each family occurs in the dataset.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n#libraries used: tidyverse\nvariable_list <- canterbury_birds %>%\n  group_by(Family) %>%\n  summarise(count = n())\nview(variable_list)\n```\n:::\n\n\n### A Geospatial Look\n\nAnother way to look at the data is with a map. Geospatial data can be a bit tricky so we're only going to use it to get an impression of our variable. In this case we're only looking at the South Island because that's where Canterbury is, filter by North or South depending on the location of your data. We use the *mutate(...)* function to take the absolute value of all the longitudes because a few occurrences were not filled in correctly and have negative longitudes. The mutate function fixes this issue as New Zealand only has positive longitudes.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n#libraries used: mapproj, tidyverse\nnz_map <- map_data(\"nz\", region = \"South.Island\")\n\ncanterbury_birds <- canterbury_birds %>%\n  mutate(longitude = abs(longitude))\n\nggplot(data=nz_map) +\n  geom_polygon(mapping=aes(x=long, y=lat, group=group)) +\n  coord_map() +\n  geom_point(data=canterbury_birds, mapping=aes(x=longitude, y=latitude, colour=Family), alpha=0.5, size=0.5) +\n  facet_wrap(~Year) +\n  xlab(\"Longitude\") +\n  ylab(\"Latitude\")\n```\n:::\n\n\n### Weather Data\n\nNow we import the weather data, do this by reading in the csv file titled weather_data_all.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n#libraries used: tidyverse\nweather <- read_delim(\"https://raw.githubusercontent.com/ucrdatacenter/projects/main/SCIENVI303/2023h1/ass2/weather_data_all.csv\", delim=\",\")\n```\n:::\n\n\n## Data tidying\n\nOur weather data requires a fair bit of tidying before we can combine it with our bird data. If you view the weather dataframe you'll notice that it contains the data for all regions in New Zealand, not just your selected one, so that needs to be filtered. We also need to select a weather variable and filter the dataset accordingly. In this case we filter Canterbury and wind.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n#library used: tidyverse\nweather_tidy <- weather %>%\n  filter(Stats_Code == \"wind\" & State == \"Canterbury\")\n```\n:::\n\n\nThe dataset has a weird quirk in which a few of the months are numerical rather than characters, we want to change those so all our months are of the same type.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n#library used: tidyverse\nweather_tidy <- weather_tidy %>% \n mutate(Jul = as.character(Jul),\n         Aug = as.character(Aug),\n         Sep = as.character(Sep))\n```\n:::\n\n\nOnce we've done that we can use a *pivot_longer(..., names_to = \"..\", values_to = \"..\")* function to change the structure of the dataset to match that of the bird dataset, making our months one column instead of twelve. We then use *pivot_wider(names_from = \"..\", values_from = \"..\")* to make the weather data nicer to read. We will also change the names of the months into numbers by using the mutate and *ifelse(..)* functions. Lastly we need to make sure that our month values and weather variable are numerical.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n#libraries used: tidyverse\nweather_tidy <- weather_tidy %>%\n  pivot_longer(c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"), names_to = \"month\", values_to = \"x\") %>%\n  pivot_wider(names_from = Stats_Code, values_from = x) %>%\n  mutate(month = ifelse(month == \"Jan\", 1, month), \n         month = ifelse(month == \"Feb\", 2, month),\n         month = ifelse(month == \"Mar\", 3, month),\n         month = ifelse(month == \"Apr\", 4, month),\n         month = ifelse(month == \"May\", 5, month),\n         month = ifelse(month == \"Jun\", 6, month),\n         month = ifelse(month == \"Jul\", 7, month),\n         month = ifelse(month == \"Aug\", 8, month),\n         month = ifelse(month == \"Sep\", 9, month),\n         month = ifelse(month == \"Oct\", 10, month),\n         month = ifelse(month == \"Nov\", 11, month),\n         month = ifelse(month == \"Dec\", 12, month)) %>%\n  mutate(month = as.numeric(month)) %>%\n  mutate(\n         wind = as.numeric(wind))\n\nview(weather_tidy)\n```\n:::\n\n\nThe bird dataframe doesn't need any tidying, but we do want to filter it by our chosen variable, in this case the Procellariidae family.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n#libraries used: tidyverse\ncanterbury_filtered <- canterbury_birds %>%\n  filter(Family == \"Procellariidae\")\n```\n:::\n\n\nNow the two dataframes are ready to be combined. We do this by using the left_join function, we will join by year and month.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\n#libraries used: tidyverse\nweather_birds <- canterbury_filtered %>%\n  left_join(weather_tidy, by=c(\"Year\", \"month\"))\nview(weather_birds)\n```\n:::\n\n\n## Plotting the Data\n\nNow we can plot the data to see if there's a correlation between our bird and weather variables. This can be done multiple ways, I will present 3 examples.\n\n### The histogram\n\nThe histogram shows frequency distributions, in this case the frequency of birds sighted at different wind levels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#library used: tidyverse\nggplot(data=weather_birds) +\n  geom_histogram(mapping=aes(x=wind)) +\n  labs(title = \"Distribution of Procellariidae accross different wind strengths\",\n       x = \"Wind strength\",\n       y = \"Number of birds\")\n```\n:::\n\n\n### The counts plot\n\nThe counts plot plots the individual data points as dots, the dots grow bigger every time a data point overlaps. A good way to see a correlation despite overlapping data points. We use the log10 value due to large differences between bird occurrences (ranging from 1 to 5000). It makes the visualisation more readable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#libraries used: tidyverse\nggplot(data=weather_birds) +\n  geom_count(mapping=aes(x=wind, y=log10(birds_spotted_month))) +\n    labs(title = \"Procellariidae accross different wind strengths, counts plot\",\n       x = \"Wind strength\",\n       y = \"Number of birds in log10\")\n```\n:::\n\n\n### Line chart scatterplot\n\nLastly there's the combination of a line chart and scatterplot. The line chart makes it easy to read any correlations and the scatterplot helps us see how accurate the line chart is.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#library used: tidyverse\nggplot(data=weather_birds) +\n  geom_point(mapping = aes(x=wind, y=log10(birds_spotted_month), colour=Family), alpha=0.5) +\n  geom_smooth(mapping=aes(x=wind, y=log10(birds_spotted_month), colour=Family), alpha=0.5, se=FALSE) +\n    labs(title = \"Procellariidae accross different wind strengths, scatter/smooth plot\",\n       x = \"Wind strength\",\n       y = \"Number of birds in log10\")\n```\n:::\n\n\n## Statistical Analysis\n\nAside from observing a visual relationship, we can also look for a quantitative connection. We use a linear model for this using the code *lm()*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#library used: tidymodels\nlm(log10(birds_spotted_month) ~ poly(wind, 3), weather_birds) %>%\n  tidy()\n```\n:::\n\n\n## Conclusion\n\nWith all this analysis combined we can draw a conclusion regarding the correlation between our bird and weather variables. In this case we can say that there is a positive correlation between bird occurrences from the family Procellariidae and wind strength.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}